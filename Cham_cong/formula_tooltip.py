#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Tooltip ƒë∆°n gi·∫£n cho c√°c √¥ th√†nh ti·ªÅn trong phi·∫øu l∆∞∆°ng
"""

from PyQt5.QtWidgets import QToolTip
from PyQt5.QtCore import QTimer, QPoint

class SimpleFormulaTooltip:
    def __init__(self):
        self.timer = QTimer()
        self.timer.setSingleShot(True)
        self.timer.timeout.connect(self.show_tooltip)
        self.current_widget = None
        self.formula_text = ""
        
    def setup_tooltip(self, widget, formula_text, delay_ms=3000):
        """Thi·∫øt l·∫≠p tooltip cho widget"""
        widget.mousePressEvent = lambda event: self.on_mouse_press(widget, formula_text, delay_ms, event)
        widget.mouseReleaseEvent = lambda event: self.on_mouse_release(event)
        widget.leaveEvent = lambda event: self.on_leave(event)
        
    def on_mouse_press(self, widget, formula_text, delay_ms, event):
        """Khi nh·∫•n chu·ªôt v√†o widget"""
        self.current_widget = widget
        self.formula_text = formula_text
        self.timer.start(delay_ms)
        
    def on_mouse_release(self, event):
        """Khi th·∫£ chu·ªôt"""
        self.timer.stop()
        
    def on_leave(self, event):
        """Khi chu·ªôt r·ªùi kh·ªèi widget"""
        self.timer.stop()
        QToolTip.hideText()
        
    def show_tooltip(self):
        """Hi·ªÉn th·ªã tooltip v·ªõi c√¥ng th·ª©c"""
        if self.current_widget and self.formula_text:
            # L·∫•y v·ªã tr√≠ c·ªßa widget
            pos = self.current_widget.mapToGlobal(QPoint(0, 0))
            
            # T·∫°o tooltip ƒë∆°n gi·∫£n
            tooltip_html = f"""
            <div style="
                background-color: #2c3e50;
                color: white;
                padding: 8px;
                border-radius: 4px;
                font-size: 11px;
                max-width: 250px;
                border: 1px solid #3498db;
            ">
                <div style="font-weight: bold; color: #3498db; margin-bottom: 3px;">
                    üîç C√îNG TH·ª®C
                </div>
                <div style="color: #ecf0f1;">
                    {self.formula_text}
                </div>
            </div>
            """
            
            QToolTip.showText(pos, tooltip_html, self.current_widget)

def get_formula_text(component_name):
    """L·∫•y text c√¥ng th·ª©c cho t·ª´ng component"""
    formulas = {
        "luong_co_ban": "L∆∞∆°ng c∆° b·∫£n = S·ªë ng√†y l√†m vi·ªác √ó L∆∞∆°ng c∆° b·∫£n/ng√†y",
        "them_gio_150": "Th√™m gi·ªù 150% = S·ªë gi·ªù √ó L∆∞∆°ng 1 gi·ªù √ó 1.5",
        "them_gio_200": "Th√™m gi·ªù 200% = S·ªë gi·ªù √ó L∆∞∆°ng 1 gi·ªù √ó 2.0", 
        "them_gio_300": "Th√™m gi·ªù 300% = S·ªë gi·ªù √ó L∆∞∆°ng 1 gi·ªù √ó 3.0",
        "tong_them_gio": "T·ªïng th√™m gi·ªù = 150% + 200% + 300%",
        "phu_cap_cong_truong": "PC c√¥ng tr∆∞·ªùng = S·ªë ng√†y c√¥ng tr∆∞·ªùng √ó M·ª©c ph·ª• c·∫•p",
        "phu_cap_dao_tao": "PC ƒë√†o t·∫°o = S·ªë ng√†y ƒë√†o t·∫°o √ó (M·ª©c PC c√¥ng tr∆∞·ªùng √ó 0.4)",
        "phu_cap_van_phong": "PC vƒÉn ph√≤ng = S·ªë ng√†y vƒÉn ph√≤ng √ó (M·ª©c PC c√¥ng tr∆∞·ªùng √ó 0.2)",
        "phu_cap_chuc_danh": "PC ch·ª©c danh = (S·ªë ng√†y c√¥ng tr∆∞·ªùng / S·ªë ng√†y l√†m vi·ªác th√°ng) √ó M·ª©c ph·ª• c·∫•p",
        "xang_xe": "XƒÉng xe = T·ªïng t·ª´ d·ªØ li·ªáu ch·∫•m c√¥ng (theo c√¥ng ty)",
        "dien_thoai": "ƒêi·ªán tho·∫°i = T·ªïng t·ª´ d·ªØ li·ªáu ch·∫•m c√¥ng",
        "khach_san": "Kh√°ch s·∫°n = T·ªïng t·ª´ d·ªØ li·ªáu ch·∫•m c√¥ng",
        "tong_phu_cap": "T·ªïng ph·ª• c·∫•p = C√¥ng tr√¨nh + ƒê√†o t·∫°o + VƒÉn ph√≤ng + Ch·ª©c danh + XƒÉng xe + ƒêi·ªán tho·∫°i + Kh√°ch s·∫°n",
        "kpi_paut": "KPI PAUT = S·ªë m√©t v∆∞·ª£t √ó ƒê∆°n gi√° PAUT",
        "kpi_tofd": "KPI TOFD = S·ªë m√©t v∆∞·ª£t √ó ƒê∆°n gi√° TOFD",
        "tong_kpi": "T·ªïng KPI = PAUT + TOFD",
        "bhxh": "BHXH = L∆∞∆°ng c∆° s·ªü BHXH √ó 10.5%",
        "thue_tncn": "Thu·∫ø TNCN = T√≠nh theo b·∫≠c thu·∫ø l≈©y ti·∫øn",
        "tam_ung": "T·∫°m ·ª©ng = S·ªë ti·ªÅn t·∫°m ·ª©ng (nh·∫≠p th·ªß c√¥ng)",
        "vi_pham": "Vi ph·∫°m = S·ªë ti·ªÅn vi ph·∫°m (nh·∫≠p th·ªß c√¥ng)",
        "tong_khau_tru": "T·ªïng kh·∫•u tr·ª´ = BHXH + Thu·∫ø TNCN + T·∫°m ·ª©ng + Vi ph·∫°m",
        "mua_sam": "Mua s·∫Øm = T·ªïng chi ph√≠ mua s·∫Øm t·ª´ d·ªØ li·ªáu ch·∫•m c√¥ng",
        "tong_cong": "T·ªïng c·ªông (I) = L∆∞∆°ng c∆° b·∫£n + Th√™m gi·ªù + Ph·ª• c·∫•p + KPI",
        "thuc_nhan": "Th·ª±c nh·∫≠n = T·ªïng c·ªông (I) - T·ªïng kh·∫•u tr·ª´ (E) + Mua s·∫Øm (F)"
    }
    
    return formulas.get(component_name, f"C√¥ng th·ª©c cho {component_name} ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a") 