# Generated by Django

from django.db import migrations, models
import django.db.models.deletion
from django.utils.text import slugify


def update_document_fields(apps, schema_editor):
    Document = apps.get_model('api', 'Document')
    
    # Update existing documents with default values
    for doc in Document.objects.all():
        if not hasattr(doc, 'slug') or not doc.slug:
            doc.slug = slugify(doc.title)
        if not hasattr(doc, 'document_code') or not doc.document_code:
            doc.document_code = f"DOC-{doc.id}"
        if not hasattr(doc, 'parent_document') or not doc.parent_document:
            doc.parent_document = doc
        doc.save()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0043_userprofile_msnv'),
    ]

    operations = [
        migrations.AddField(
            model_name='document',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='document',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='document',
            name='parent_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_versions', to='api.document'),
        ),
        migrations.AddField(
            model_name='document',
            name='file_size',
            field=models.BigIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='document',
            name='file_hash',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.AddField(
            model_name='document',
            name='slug',
            field=models.SlugField(blank=True, max_length=200, unique=True),
        ),
        migrations.AddField(
            model_name='document',
            name='document_code',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='document',
            name='view_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='document',
            name='download_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='document',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.documentcategory'),
        ),
        migrations.RunPython(update_document_fields),
        migrations.CreateModel(
            name='DocumentAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('share', 'Share')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ] 